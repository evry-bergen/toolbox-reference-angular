name: ci

on:
  push:
    branches: master
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      -
        name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm ci
      #- run: npm audit
      - run: npm run license-checker
      - run: npm run lint
      - run: npm run citest
      - run: npm run build
      -
        name: Get commit sha
        shell: bash
        run: echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV
      -
        name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
      -
        name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.MAZE_ACR_REGISTRY }}
          username: ${{ secrets.MAZE_ACR_USERNAME }}
          password: ${{ secrets.MAZE_ACR_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.MAZE_ACR_REGISTRY }}/github-evry-bergen/toolbox-reference-angular:${{ env.BRANCH_NAME }}-${{ env.SHORT_SHA }}
          #build-args: |
          #  arg1=value1
          #  arg2=value2
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
